// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: msg/endnode.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownlinkResultEnum int32

const (
	DownlinkResultEnum_SENT    DownlinkResultEnum = 0
	DownlinkResultEnum_EXPIRED DownlinkResultEnum = 1
	DownlinkResultEnum_INVALID DownlinkResultEnum = 2
)

// Enum value maps for DownlinkResultEnum.
var (
	DownlinkResultEnum_name = map[int32]string{
		0: "SENT",
		1: "EXPIRED",
		2: "INVALID",
	}
	DownlinkResultEnum_value = map[string]int32{
		"SENT":    0,
		"EXPIRED": 1,
		"INVALID": 2,
	}
)

func (x DownlinkResultEnum) Enum() *DownlinkResultEnum {
	p := new(DownlinkResultEnum)
	*p = x
	return p
}

func (x DownlinkResultEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownlinkResultEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_endnode_proto_enumTypes[0].Descriptor()
}

func (DownlinkResultEnum) Type() protoreflect.EnumType {
	return &file_msg_endnode_proto_enumTypes[0]
}

func (x DownlinkResultEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownlinkResultEnum.Descriptor instead.
func (DownlinkResultEnum) EnumDescriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{0}
}

type CarrierSpacingEnum int32

const (
	CarrierSpacingEnum_NARROW   CarrierSpacingEnum = 0
	CarrierSpacingEnum_STANDARD CarrierSpacingEnum = 1
	CarrierSpacingEnum_WIDE     CarrierSpacingEnum = 2
)

// Enum value maps for CarrierSpacingEnum.
var (
	CarrierSpacingEnum_name = map[int32]string{
		0: "NARROW",
		1: "STANDARD",
		2: "WIDE",
	}
	CarrierSpacingEnum_value = map[string]int32{
		"NARROW":   0,
		"STANDARD": 1,
		"WIDE":     2,
	}
)

func (x CarrierSpacingEnum) Enum() *CarrierSpacingEnum {
	p := new(CarrierSpacingEnum)
	*p = x
	return p
}

func (x CarrierSpacingEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarrierSpacingEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_endnode_proto_enumTypes[1].Descriptor()
}

func (CarrierSpacingEnum) Type() protoreflect.EnumType {
	return &file_msg_endnode_proto_enumTypes[1]
}

func (x CarrierSpacingEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CarrierSpacingEnum.Descriptor instead.
func (CarrierSpacingEnum) EnumDescriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{1}
}

type TsmaPatternGroupEnum int32

const (
	TsmaPatternGroupEnum_NORMAL     TsmaPatternGroupEnum = 0
	TsmaPatternGroupEnum_REPETITION TsmaPatternGroupEnum = 1
	TsmaPatternGroupEnum_LOW_DELAY  TsmaPatternGroupEnum = 2
)

// Enum value maps for TsmaPatternGroupEnum.
var (
	TsmaPatternGroupEnum_name = map[int32]string{
		0: "NORMAL",
		1: "REPETITION",
		2: "LOW_DELAY",
	}
	TsmaPatternGroupEnum_value = map[string]int32{
		"NORMAL":     0,
		"REPETITION": 1,
		"LOW_DELAY":  2,
	}
)

func (x TsmaPatternGroupEnum) Enum() *TsmaPatternGroupEnum {
	p := new(TsmaPatternGroupEnum)
	*p = x
	return p
}

func (x TsmaPatternGroupEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TsmaPatternGroupEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_endnode_proto_enumTypes[2].Descriptor()
}

func (TsmaPatternGroupEnum) Type() protoreflect.EnumType {
	return &file_msg_endnode_proto_enumTypes[2]
}

func (x TsmaPatternGroupEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TsmaPatternGroupEnum.Descriptor instead.
func (TsmaPatternGroupEnum) EnumDescriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{2}
}

type ProtoEndnodeMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basestation EUI, 8 bytes little endian
	BsEui uint64 `protobuf:"varint,1,opt,name=bs_eui,json=bsEui,proto3" json:"bs_eui,omitempty"`
	// Endnode EUI, 8 bytes little endian
	EndnodeEui uint64 `protobuf:"varint,2,opt,name=endnode_eui,json=endnodeEui,proto3" json:"endnode_eui,omitempty"`
	// Message.
	//
	// Types that are valid to be assigned to V1:
	//
	//	*ProtoEndnodeMessage_Att
	//	*ProtoEndnodeMessage_Det
	//	*ProtoEndnodeMessage_UlData
	//	*ProtoEndnodeMessage_DlRxStat
	//	*ProtoEndnodeMessage_DlRes
	//	*ProtoEndnodeMessage_VmUlData
	V1            isProtoEndnodeMessage_V1 `protobuf_oneof:"v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoEndnodeMessage) Reset() {
	*x = ProtoEndnodeMessage{}
	mi := &file_msg_endnode_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoEndnodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEndnodeMessage) ProtoMessage() {}

func (x *ProtoEndnodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEndnodeMessage.ProtoReflect.Descriptor instead.
func (*ProtoEndnodeMessage) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoEndnodeMessage) GetBsEui() uint64 {
	if x != nil {
		return x.BsEui
	}
	return 0
}

func (x *ProtoEndnodeMessage) GetEndnodeEui() uint64 {
	if x != nil {
		return x.EndnodeEui
	}
	return 0
}

func (x *ProtoEndnodeMessage) GetV1() isProtoEndnodeMessage_V1 {
	if x != nil {
		return x.V1
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetAtt() *EndnodeAttMessage {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_Att); ok {
			return x.Att
		}
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetDet() *EndnodeDetMessage {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_Det); ok {
			return x.Det
		}
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetUlData() *EndnodeUlDataMessage {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_UlData); ok {
			return x.UlData
		}
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetDlRxStat() *EndnodeDownlinkRxStatus {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_DlRxStat); ok {
			return x.DlRxStat
		}
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetDlRes() *EndnodeDownlinkResult {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_DlRes); ok {
			return x.DlRes
		}
	}
	return nil
}

func (x *ProtoEndnodeMessage) GetVmUlData() *EndnodeVariableMacUlDataMessage {
	if x != nil {
		if x, ok := x.V1.(*ProtoEndnodeMessage_VmUlData); ok {
			return x.VmUlData
		}
	}
	return nil
}

type isProtoEndnodeMessage_V1 interface {
	isProtoEndnodeMessage_V1()
}

type ProtoEndnodeMessage_Att struct {
	// Over the air attachment
	Att *EndnodeAttMessage `protobuf:"bytes,4,opt,name=att,proto3,oneof"`
}

type ProtoEndnodeMessage_Det struct {
	// Over the air detachment
	Det *EndnodeDetMessage `protobuf:"bytes,5,opt,name=det,proto3,oneof"`
}

type ProtoEndnodeMessage_UlData struct {
	// Uplink payload
	UlData *EndnodeUlDataMessage `protobuf:"bytes,6,opt,name=ul_data,json=ulData,proto3,oneof"`
}

type ProtoEndnodeMessage_DlRxStat struct {
	// Downlink RX Status
	DlRxStat *EndnodeDownlinkRxStatus `protobuf:"bytes,7,opt,name=dl_rx_stat,json=dlRxStat,proto3,oneof"`
}

type ProtoEndnodeMessage_DlRes struct {
	// Downlink result
	DlRes *EndnodeDownlinkResult `protobuf:"bytes,8,opt,name=dl_res,json=dlRes,proto3,oneof"`
}

type ProtoEndnodeMessage_VmUlData struct {
	// Variable Mac Uplink Payload
	VmUlData *EndnodeVariableMacUlDataMessage `protobuf:"bytes,9,opt,name=vm_ul_data,json=vmUlData,proto3,oneof"`
}

func (*ProtoEndnodeMessage_Att) isProtoEndnodeMessage_V1() {}

func (*ProtoEndnodeMessage_Det) isProtoEndnodeMessage_V1() {}

func (*ProtoEndnodeMessage_UlData) isProtoEndnodeMessage_V1() {}

func (*ProtoEndnodeMessage_DlRxStat) isProtoEndnodeMessage_V1() {}

func (*ProtoEndnodeMessage_DlRes) isProtoEndnodeMessage_V1() {}

func (*ProtoEndnodeMessage_VmUlData) isProtoEndnodeMessage_V1() {}

type EndnodeAttMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the operation
	OpId int64 `protobuf:"varint,1,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	// Attachment_cnt counter.
	AttachmentCnt uint32 `protobuf:"varint,2,opt,name=attachment_cnt,json=attachmentCnt,proto3" json:"attachment_cnt,omitempty"`
	// End Point nonce, 4 bytes little endian
	Nonce uint32 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// End Point signature, 4 bytes little endian
	Sign uint32 `protobuf:"varint,4,opt,name=sign,proto3" json:"sign,omitempty"`
	// End Point short address, only if assigned by the Base Station, 2 bytes little endian
	ShAddr *uint32 `protobuf:"varint,5,opt,name=sh_addr,json=shAddr,proto3,oneof" json:"sh_addr,omitempty"`
	// Metadata.
	Meta *EndnodeUplinkMetadata `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	// True if End Point uses dual channel mode
	DualChannel bool `protobuf:"varint,7,opt,name=dual_channel,json=dualChannel,proto3" json:"dual_channel,omitempty"`
	// True if End Point uses DL repetition
	Repetition bool `protobuf:"varint,8,opt,name=repetition,proto3" json:"repetition,omitempty"`
	// True if End Point uses wide carrier offset
	WideCarrOff bool `protobuf:"varint,9,opt,name=wide_carr_off,json=wideCarrOff,proto3" json:"wide_carr_off,omitempty"`
	// True if End Point uses long DL interblock distance
	LongBlkDist   bool `protobuf:"varint,10,opt,name=long_blk_dist,json=longBlkDist,proto3" json:"long_blk_dist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeAttMessage) Reset() {
	*x = EndnodeAttMessage{}
	mi := &file_msg_endnode_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeAttMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeAttMessage) ProtoMessage() {}

func (x *EndnodeAttMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeAttMessage.ProtoReflect.Descriptor instead.
func (*EndnodeAttMessage) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{1}
}

func (x *EndnodeAttMessage) GetOpId() int64 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *EndnodeAttMessage) GetAttachmentCnt() uint32 {
	if x != nil {
		return x.AttachmentCnt
	}
	return 0
}

func (x *EndnodeAttMessage) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EndnodeAttMessage) GetSign() uint32 {
	if x != nil {
		return x.Sign
	}
	return 0
}

func (x *EndnodeAttMessage) GetShAddr() uint32 {
	if x != nil && x.ShAddr != nil {
		return *x.ShAddr
	}
	return 0
}

func (x *EndnodeAttMessage) GetMeta() *EndnodeUplinkMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EndnodeAttMessage) GetDualChannel() bool {
	if x != nil {
		return x.DualChannel
	}
	return false
}

func (x *EndnodeAttMessage) GetRepetition() bool {
	if x != nil {
		return x.Repetition
	}
	return false
}

func (x *EndnodeAttMessage) GetWideCarrOff() bool {
	if x != nil {
		return x.WideCarrOff
	}
	return false
}

func (x *EndnodeAttMessage) GetLongBlkDist() bool {
	if x != nil {
		return x.LongBlkDist
	}
	return false
}

type EndnodeDetMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the operation
	OpId int64 `protobuf:"varint,1,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	// End Point signature , 4 bytes little endian
	Sign uint32 `protobuf:"varint,2,opt,name=sign,proto3" json:"sign,omitempty"`
	// Metadata.
	Meta          *EndnodeUplinkMetadata `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeDetMessage) Reset() {
	*x = EndnodeDetMessage{}
	mi := &file_msg_endnode_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeDetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeDetMessage) ProtoMessage() {}

func (x *EndnodeDetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeDetMessage.ProtoReflect.Descriptor instead.
func (*EndnodeDetMessage) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{2}
}

func (x *EndnodeDetMessage) GetOpId() int64 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *EndnodeDetMessage) GetSign() uint32 {
	if x != nil {
		return x.Sign
	}
	return 0
}

func (x *EndnodeDetMessage) GetMeta() *EndnodeUplinkMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

type EndnodeUlDataMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// End Point user data, might be empty
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// MPF header byte, 1 byte
	Format uint32 `protobuf:"varint,2,opt,name=format,proto3" json:"format,omitempty"`
	// mioty Mode. (Optional)
	Mode *string `protobuf:"bytes,3,opt,name=mode,proto3,oneof" json:"mode,omitempty"`
	// Metadata.
	Meta *EndnodeUplinkMetadata `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// True if End Point downlink window is opened
	DlOpen bool `protobuf:"varint,5,opt,name=dl_open,json=dlOpen,proto3" json:"dl_open,omitempty"`
	// True if End Point acknowledges the reception of a DL transmission in the last DL window (packetCnt - 1)
	DlAck         bool `protobuf:"varint,6,opt,name=dl_ack,json=dlAck,proto3" json:"dl_ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeUlDataMessage) Reset() {
	*x = EndnodeUlDataMessage{}
	mi := &file_msg_endnode_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeUlDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeUlDataMessage) ProtoMessage() {}

func (x *EndnodeUlDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeUlDataMessage.ProtoReflect.Descriptor instead.
func (*EndnodeUlDataMessage) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{3}
}

func (x *EndnodeUlDataMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EndnodeUlDataMessage) GetFormat() uint32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *EndnodeUlDataMessage) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *EndnodeUlDataMessage) GetMeta() *EndnodeUplinkMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EndnodeUlDataMessage) GetDlOpen() bool {
	if x != nil {
		return x.DlOpen
	}
	return false
}

func (x *EndnodeUlDataMessage) GetDlAck() bool {
	if x != nil {
		return x.DlAck
	}
	return false
}

type EndnodeDownlinkRxStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basestation RX time.
	RxTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=rx_time,json=rxTime,proto3" json:"rx_time,omitempty"`
	// Packet counter.
	PacketCnt uint32 `protobuf:"varint,2,opt,name=packet_cnt,json=packetCnt,proto3" json:"packet_cnt,omitempty"`
	// RSSI.
	DlRxRssi float64 `protobuf:"fixed64,3,opt,name=dl_rx_rssi,json=dlRxRssi,proto3" json:"dl_rx_rssi,omitempty"`
	// SNR.
	DlRxSnr       float64 `protobuf:"fixed64,4,opt,name=dl_rx_snr,json=dlRxSnr,proto3" json:"dl_rx_snr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeDownlinkRxStatus) Reset() {
	*x = EndnodeDownlinkRxStatus{}
	mi := &file_msg_endnode_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeDownlinkRxStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeDownlinkRxStatus) ProtoMessage() {}

func (x *EndnodeDownlinkRxStatus) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeDownlinkRxStatus.ProtoReflect.Descriptor instead.
func (*EndnodeDownlinkRxStatus) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{4}
}

func (x *EndnodeDownlinkRxStatus) GetRxTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RxTime
	}
	return nil
}

func (x *EndnodeDownlinkRxStatus) GetPacketCnt() uint32 {
	if x != nil {
		return x.PacketCnt
	}
	return 0
}

func (x *EndnodeDownlinkRxStatus) GetDlRxRssi() float64 {
	if x != nil {
		return x.DlRxRssi
	}
	return 0
}

func (x *EndnodeDownlinkRxStatus) GetDlRxSnr() float64 {
	if x != nil {
		return x.DlRxSnr
	}
	return 0
}

type EndnodeUplinkMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basestation RX time.
	RxTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=rx_time,json=rxTime,proto3" json:"rx_time,omitempty"`
	// Duration of the reception. (Optional)
	RxDuration *durationpb.Duration `protobuf:"bytes,2,opt,name=rx_duration,json=rxDuration,proto3,oneof" json:"rx_duration,omitempty"`
	// Packet counter.
	PacketCnt uint32 `protobuf:"varint,3,opt,name=packet_cnt,json=packetCnt,proto3" json:"packet_cnt,omitempty"`
	// Profile. (Optional)
	Profile *string `protobuf:"bytes,4,opt,name=profile,proto3,oneof" json:"profile,omitempty"`
	// RSSI.
	Rssi float64 `protobuf:"fixed64,5,opt,name=rssi,proto3" json:"rssi,omitempty"`
	// SNR.
	Snr float64 `protobuf:"fixed64,6,opt,name=snr,proto3" json:"snr,omitempty"`
	// AWGN equivalent reception SNR. (Optional)
	EqSnr *float64 `protobuf:"fixed64,7,opt,name=eq_snr,json=eqSnr,proto3,oneof" json:"eq_snr,omitempty"`
	// Reception info for every subpacket. (Optional)
	SubpacketInfo []*EndnodeUplinkSubpacket `protobuf:"bytes,8,rep,name=subpacket_info,json=subpacketInfo,proto3" json:"subpacket_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeUplinkMetadata) Reset() {
	*x = EndnodeUplinkMetadata{}
	mi := &file_msg_endnode_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeUplinkMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeUplinkMetadata) ProtoMessage() {}

func (x *EndnodeUplinkMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeUplinkMetadata.ProtoReflect.Descriptor instead.
func (*EndnodeUplinkMetadata) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{5}
}

func (x *EndnodeUplinkMetadata) GetRxTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RxTime
	}
	return nil
}

func (x *EndnodeUplinkMetadata) GetRxDuration() *durationpb.Duration {
	if x != nil {
		return x.RxDuration
	}
	return nil
}

func (x *EndnodeUplinkMetadata) GetPacketCnt() uint32 {
	if x != nil {
		return x.PacketCnt
	}
	return 0
}

func (x *EndnodeUplinkMetadata) GetProfile() string {
	if x != nil && x.Profile != nil {
		return *x.Profile
	}
	return ""
}

func (x *EndnodeUplinkMetadata) GetRssi() float64 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *EndnodeUplinkMetadata) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *EndnodeUplinkMetadata) GetEqSnr() float64 {
	if x != nil && x.EqSnr != nil {
		return *x.EqSnr
	}
	return 0
}

func (x *EndnodeUplinkMetadata) GetSubpacketInfo() []*EndnodeUplinkSubpacket {
	if x != nil {
		return x.SubpacketInfo
	}
	return nil
}

type EndnodeUplinkSubpacket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subpacket signal to noise ratio in dB.
	Snr int32 `protobuf:"varint,1,opt,name=snr,proto3" json:"snr,omitempty"`
	// Subpacket signal strength in dBm.
	Rssi int32 `protobuf:"varint,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	// Subpacket frequencies in Hz.
	Frequency int32 `protobuf:"varint,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Subpacket phases in degree +-180. (Optional)
	Phase         *int32 `protobuf:"varint,4,opt,name=phase,proto3,oneof" json:"phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeUplinkSubpacket) Reset() {
	*x = EndnodeUplinkSubpacket{}
	mi := &file_msg_endnode_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeUplinkSubpacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeUplinkSubpacket) ProtoMessage() {}

func (x *EndnodeUplinkSubpacket) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeUplinkSubpacket.ProtoReflect.Descriptor instead.
func (*EndnodeUplinkSubpacket) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{6}
}

func (x *EndnodeUplinkSubpacket) GetSnr() int32 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *EndnodeUplinkSubpacket) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *EndnodeUplinkSubpacket) GetFrequency() int32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *EndnodeUplinkSubpacket) GetPhase() int32 {
	if x != nil && x.Phase != nil {
		return *x.Phase
	}
	return 0
}

type EndnodeDownlinkResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Assigned queue ID for reference
	DlQueId uint64 `protobuf:"varint,3,opt,name=dl_que_id,json=dlQueId,proto3" json:"dl_que_id,omitempty"`
	// Result of the downlink
	Result DownlinkResultEnum `protobuf:"varint,4,opt,name=result,proto3,enum=msg.DownlinkResultEnum" json:"result,omitempty"`
	// Unix UTC time of transmission, center of first subpacket, 64 bit, ns resolution, only if result is sent
	TxTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=tx_time,json=txTime,proto3" json:"tx_time,omitempty"`
	// End Point packet counter, only if result is “sent”
	EpPacketCnt   uint32 `protobuf:"varint,6,opt,name=ep_packet_cnt,json=epPacketCnt,proto3" json:"ep_packet_cnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeDownlinkResult) Reset() {
	*x = EndnodeDownlinkResult{}
	mi := &file_msg_endnode_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeDownlinkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeDownlinkResult) ProtoMessage() {}

func (x *EndnodeDownlinkResult) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeDownlinkResult.ProtoReflect.Descriptor instead.
func (*EndnodeDownlinkResult) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{7}
}

func (x *EndnodeDownlinkResult) GetDlQueId() uint64 {
	if x != nil {
		return x.DlQueId
	}
	return 0
}

func (x *EndnodeDownlinkResult) GetResult() DownlinkResultEnum {
	if x != nil {
		return x.Result
	}
	return DownlinkResultEnum_SENT
}

func (x *EndnodeDownlinkResult) GetTxTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TxTime
	}
	return nil
}

func (x *EndnodeDownlinkResult) GetEpPacketCnt() uint32 {
	if x != nil {
		return x.EpPacketCnt
	}
	return 0
}

type EndnodeVariableMacUlDataMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// n Byte End Point user data U-MPDU; starting with first byte after MAC-Type
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// MAC-Type of Variable MAC, 1 byte
	MacType int64 `protobuf:"varint,2,opt,name=macType,proto3" json:"macType,omitempty"`
	// Metadata.
	Meta *EndnodeUplinkMetadata `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// Frequency offset from center between primary and secondary channel in Hz
	FreqOff uint64 `protobuf:"varint,5,opt,name=freq_off,json=freqOff,proto3" json:"freq_off,omitempty"`
	// Carrier spacing step size Bc, 0 = narrow, 1 = standard, 2 = wide
	CarrSpace CarrierSpacingEnum `protobuf:"varint,6,opt,name=carr_space,json=carrSpace,proto3,enum=msg.CarrierSpacingEnum" json:"carr_space,omitempty"`
	// Uplink TSMA Pattern group, 0 = normal, 1 = repetition, 2 = low delay
	PattGrp TsmaPatternGroupEnum `protobuf:"varint,7,opt,name=patt_grp,json=pattGrp,proto3,enum=msg.TsmaPatternGroupEnum" json:"patt_grp,omitempty"`
	// Uplink TSMA Pattern number p
	PattNum uint32 `protobuf:"varint,8,opt,name=patt_num,json=pattNum,proto3" json:"patt_num,omitempty"`
	// Header and payload CRC, crc[0] = header CRC, crc[1] = payload CRC
	Crc           uint64 `protobuf:"varint,9,opt,name=crc,proto3" json:"crc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndnodeVariableMacUlDataMessage) Reset() {
	*x = EndnodeVariableMacUlDataMessage{}
	mi := &file_msg_endnode_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndnodeVariableMacUlDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndnodeVariableMacUlDataMessage) ProtoMessage() {}

func (x *EndnodeVariableMacUlDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_endnode_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndnodeVariableMacUlDataMessage.ProtoReflect.Descriptor instead.
func (*EndnodeVariableMacUlDataMessage) Descriptor() ([]byte, []int) {
	return file_msg_endnode_proto_rawDescGZIP(), []int{8}
}

func (x *EndnodeVariableMacUlDataMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EndnodeVariableMacUlDataMessage) GetMacType() int64 {
	if x != nil {
		return x.MacType
	}
	return 0
}

func (x *EndnodeVariableMacUlDataMessage) GetMeta() *EndnodeUplinkMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EndnodeVariableMacUlDataMessage) GetFreqOff() uint64 {
	if x != nil {
		return x.FreqOff
	}
	return 0
}

func (x *EndnodeVariableMacUlDataMessage) GetCarrSpace() CarrierSpacingEnum {
	if x != nil {
		return x.CarrSpace
	}
	return CarrierSpacingEnum_NARROW
}

func (x *EndnodeVariableMacUlDataMessage) GetPattGrp() TsmaPatternGroupEnum {
	if x != nil {
		return x.PattGrp
	}
	return TsmaPatternGroupEnum_NORMAL
}

func (x *EndnodeVariableMacUlDataMessage) GetPattNum() uint32 {
	if x != nil {
		return x.PattNum
	}
	return 0
}

func (x *EndnodeVariableMacUlDataMessage) GetCrc() uint64 {
	if x != nil {
		return x.Crc
	}
	return 0
}

var File_msg_endnode_proto protoreflect.FileDescriptor

var file_msg_endnode_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x6d, 0x73, 0x67, 0x2f, 0x65, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x03, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x73, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x62, 0x73, 0x45, 0x75, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65,
	0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x75, 0x69, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x74, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x74, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x03, 0x61, 0x74, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65,
	0x44, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x64, 0x65,
	0x74, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65,
	0x55, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x64, 0x6c, 0x5f, 0x72, 0x78,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6c, 0x52,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e,
	0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x05, 0x64, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x76, 0x6d,
	0x5f, 0x75, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x55, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x6d, 0x55, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x04, 0x0a, 0x02, 0x76, 0x31, 0x22, 0xde, 0x02, 0x0a, 0x11, 0x45, 0x6e, 0x64, 0x6e, 0x6f,
	0x64, 0x65, 0x41, 0x74, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x68, 0x41, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x75, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x72,
	0x5f, 0x6f, 0x66, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x65,
	0x43, 0x61, 0x72, 0x72, 0x4f, 0x66, 0x66, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x62, 0x6c, 0x6b, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x22, 0x6c, 0x0a, 0x11, 0x45, 0x6e, 0x64, 0x6e, 0x6f,
	0x64, 0x65, 0x44, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x55, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x6c, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x6c,
	0x41, 0x63, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x17, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x52, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x78, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x72, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a,
	0x64, 0x6c, 0x5f, 0x72, 0x78, 0x5f, 0x72, 0x73, 0x73, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x64, 0x6c, 0x52, 0x78, 0x52, 0x73, 0x73, 0x69, 0x12, 0x1a, 0x0a, 0x09, 0x64, 0x6c,
	0x5f, 0x72, 0x78, 0x5f, 0x73, 0x6e, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64,
	0x6c, 0x52, 0x78, 0x53, 0x6e, 0x72, 0x22, 0xf8, 0x02, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x6e, 0x6f,
	0x64, 0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x33, 0x0a, 0x07, 0x72, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x72,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x72, 0x73, 0x73, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6e, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x65, 0x71,
	0x5f, 0x73, 0x6e, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x05, 0x65, 0x71,
	0x53, 0x6e, 0x72, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x53, 0x75, 0x62, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72,
	0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x71, 0x5f, 0x73, 0x6e,
	0x72, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c,
	0x69, 0x6e, 0x6b, 0x53, 0x75, 0x62, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x73,
	0x73, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1a, 0x0a, 0x09, 0x64, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x64, 0x6c, 0x51, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x70, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x70, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6e, 0x74, 0x22, 0xb5, 0x02, 0x0a, 0x1f, 0x45, 0x6e, 0x64, 0x6e, 0x6f, 0x64,
	0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x55, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x6e,
	0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x71, 0x5f,
	0x6f, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x65, 0x71, 0x4f,
	0x66, 0x66, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x61,
	0x74, 0x74, 0x5f, 0x67, 0x72, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x54, 0x73, 0x6d, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x47, 0x72, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x72, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x72, 0x63, 0x2a, 0x38, 0x0a,
	0x12, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x38, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41,
	0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x49, 0x44, 0x45, 0x10,
	0x02, 0x2a, 0x41, 0x0a, 0x14, 0x54, 0x73, 0x6d, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f, 0x57, 0x5f, 0x44, 0x45, 0x4c,
	0x41, 0x59, 0x10, 0x02, 0x42, 0x26, 0x5a, 0x24, 0x6d, 0x69, 0x6f, 0x74, 0x79, 0x2d, 0x62, 0x73,
	0x73, 0x63, 0x69, 0x2d, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_msg_endnode_proto_rawDescOnce sync.Once
	file_msg_endnode_proto_rawDescData []byte
)

func file_msg_endnode_proto_rawDescGZIP() []byte {
	file_msg_endnode_proto_rawDescOnce.Do(func() {
		file_msg_endnode_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_msg_endnode_proto_rawDesc), len(file_msg_endnode_proto_rawDesc)))
	})
	return file_msg_endnode_proto_rawDescData
}

var file_msg_endnode_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_msg_endnode_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_msg_endnode_proto_goTypes = []any{
	(DownlinkResultEnum)(0),                 // 0: msg.DownlinkResultEnum
	(CarrierSpacingEnum)(0),                 // 1: msg.CarrierSpacingEnum
	(TsmaPatternGroupEnum)(0),               // 2: msg.TsmaPatternGroupEnum
	(*ProtoEndnodeMessage)(nil),             // 3: msg.ProtoEndnodeMessage
	(*EndnodeAttMessage)(nil),               // 4: msg.EndnodeAttMessage
	(*EndnodeDetMessage)(nil),               // 5: msg.EndnodeDetMessage
	(*EndnodeUlDataMessage)(nil),            // 6: msg.EndnodeUlDataMessage
	(*EndnodeDownlinkRxStatus)(nil),         // 7: msg.EndnodeDownlinkRxStatus
	(*EndnodeUplinkMetadata)(nil),           // 8: msg.EndnodeUplinkMetadata
	(*EndnodeUplinkSubpacket)(nil),          // 9: msg.EndnodeUplinkSubpacket
	(*EndnodeDownlinkResult)(nil),           // 10: msg.EndnodeDownlinkResult
	(*EndnodeVariableMacUlDataMessage)(nil), // 11: msg.EndnodeVariableMacUlDataMessage
	(*timestamppb.Timestamp)(nil),           // 12: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),             // 13: google.protobuf.Duration
}
var file_msg_endnode_proto_depIdxs = []int32{
	4,  // 0: msg.ProtoEndnodeMessage.att:type_name -> msg.EndnodeAttMessage
	5,  // 1: msg.ProtoEndnodeMessage.det:type_name -> msg.EndnodeDetMessage
	6,  // 2: msg.ProtoEndnodeMessage.ul_data:type_name -> msg.EndnodeUlDataMessage
	7,  // 3: msg.ProtoEndnodeMessage.dl_rx_stat:type_name -> msg.EndnodeDownlinkRxStatus
	10, // 4: msg.ProtoEndnodeMessage.dl_res:type_name -> msg.EndnodeDownlinkResult
	11, // 5: msg.ProtoEndnodeMessage.vm_ul_data:type_name -> msg.EndnodeVariableMacUlDataMessage
	8,  // 6: msg.EndnodeAttMessage.meta:type_name -> msg.EndnodeUplinkMetadata
	8,  // 7: msg.EndnodeDetMessage.meta:type_name -> msg.EndnodeUplinkMetadata
	8,  // 8: msg.EndnodeUlDataMessage.meta:type_name -> msg.EndnodeUplinkMetadata
	12, // 9: msg.EndnodeDownlinkRxStatus.rx_time:type_name -> google.protobuf.Timestamp
	12, // 10: msg.EndnodeUplinkMetadata.rx_time:type_name -> google.protobuf.Timestamp
	13, // 11: msg.EndnodeUplinkMetadata.rx_duration:type_name -> google.protobuf.Duration
	9,  // 12: msg.EndnodeUplinkMetadata.subpacket_info:type_name -> msg.EndnodeUplinkSubpacket
	0,  // 13: msg.EndnodeDownlinkResult.result:type_name -> msg.DownlinkResultEnum
	12, // 14: msg.EndnodeDownlinkResult.tx_time:type_name -> google.protobuf.Timestamp
	8,  // 15: msg.EndnodeVariableMacUlDataMessage.meta:type_name -> msg.EndnodeUplinkMetadata
	1,  // 16: msg.EndnodeVariableMacUlDataMessage.carr_space:type_name -> msg.CarrierSpacingEnum
	2,  // 17: msg.EndnodeVariableMacUlDataMessage.patt_grp:type_name -> msg.TsmaPatternGroupEnum
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_msg_endnode_proto_init() }
func file_msg_endnode_proto_init() {
	if File_msg_endnode_proto != nil {
		return
	}
	file_msg_endnode_proto_msgTypes[0].OneofWrappers = []any{
		(*ProtoEndnodeMessage_Att)(nil),
		(*ProtoEndnodeMessage_Det)(nil),
		(*ProtoEndnodeMessage_UlData)(nil),
		(*ProtoEndnodeMessage_DlRxStat)(nil),
		(*ProtoEndnodeMessage_DlRes)(nil),
		(*ProtoEndnodeMessage_VmUlData)(nil),
	}
	file_msg_endnode_proto_msgTypes[1].OneofWrappers = []any{}
	file_msg_endnode_proto_msgTypes[3].OneofWrappers = []any{}
	file_msg_endnode_proto_msgTypes[5].OneofWrappers = []any{}
	file_msg_endnode_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_msg_endnode_proto_rawDesc), len(file_msg_endnode_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_endnode_proto_goTypes,
		DependencyIndexes: file_msg_endnode_proto_depIdxs,
		EnumInfos:         file_msg_endnode_proto_enumTypes,
		MessageInfos:      file_msg_endnode_proto_msgTypes,
	}.Build()
	File_msg_endnode_proto = out.File
	file_msg_endnode_proto_goTypes = nil
	file_msg_endnode_proto_depIdxs = nil
}
